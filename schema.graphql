# source: http://localhost:8000/__graphql
# timestamp: Sun Mar 08 2020 21:57:59 GMT-0400 (Eastern Daylight Time)

"""Provides default value for input field."""
directive @default(value: JSON!) on INPUT_FIELD_DEFINITION

"""Add date formating options."""
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

"""Link to node by foreign-key relation."""
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"""Link to File node by relative path."""
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"""Proxy resolver from another field."""
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"""Infer field types from field values."""
directive @infer(
  """Don't add default resolvers to defined fields."""
  noDefaultResolvers: Boolean
) on OBJECT

"""Do not infer field types from field values."""
directive @dontInfer(
  """Don't add default resolvers to defined fields."""
  noDefaultResolvers: Boolean
) on OBJECT

"""Define the mime-types handled by this type."""
directive @mimeTypes(
  """The mime-types handled by this type."""
  types: [String!]! = []
) on OBJECT

"""
Define parent-child relations between types. This is used to add `child*` or
`children*` convenience fields like `childImageSharp`.
"""
directive @childOf(
  """
  A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  """
  mimeTypes: [String!]! = []

  """
  A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  """
  types: [String!]! = []

  """
  Specifies whether a parent can have multiple children of this type or not.
  """
  many: Boolean! = false
) on OBJECT

"""
Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

type ContentfulAsset implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  contentful_id: String
  file: ContentfulAssetFile
  title: String
  description: String
  node_locale: String
  localFile: File
  fixed(width: Int, height: Int, quality: Int = 50, toFormat: ContentfulImageFormat = NO_CHANGE, resizingBehavior: ImageResizingBehavior, cropFocus: ContentfulImageCropFocus = null, background: String = null): ContentfulFixed
  resolutions(width: Int, height: Int, quality: Int = 50, toFormat: ContentfulImageFormat = NO_CHANGE, resizingBehavior: ImageResizingBehavior, cropFocus: ContentfulImageCropFocus = null, background: String = null): ContentfulResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
  fluid(maxWidth: Int, maxHeight: Int, quality: Int = 50, toFormat: ContentfulImageFormat = NO_CHANGE, resizingBehavior: ImageResizingBehavior, cropFocus: ContentfulImageCropFocus = null, background: String = null, sizes: String): ContentfulFluid
  sizes(maxWidth: Int, maxHeight: Int, quality: Int = 50, toFormat: ContentfulImageFormat = NO_CHANGE, resizingBehavior: ImageResizingBehavior, cropFocus: ContentfulImageCropFocus = null, background: String = null, sizes: String): ContentfulSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
  resize(width: Int, height: Int, quality: Int = 50, jpegProgressive: Boolean = true, resizingBehavior: ImageResizingBehavior, toFormat: ContentfulImageFormat = NO_CHANGE, cropFocus: ContentfulImageCropFocus = null, background: String = null): ContentfulResize
}

type ContentfulAssetConnection {
  totalCount: Int!
  edges: [ContentfulAssetEdge!]!
  nodes: [ContentfulAsset!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulAssetFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ContentfulAssetFieldsEnum!): [ContentfulAssetGroupConnection!]!
}

type ContentfulAssetEdge {
  next: ContentfulAsset
  node: ContentfulAsset!
  previous: ContentfulAsset
}

enum ContentfulAssetFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  contentful_id
  file___url
  file___details___size
  file___details___image___width
  file___details___image___height
  file___fileName
  file___contentType
  title
  description
  node_locale
  localFile___sourceInstanceName
  localFile___absolutePath
  localFile___relativePath
  localFile___extension
  localFile___size
  localFile___prettySize
  localFile___modifiedTime
  localFile___accessTime
  localFile___changeTime
  localFile___birthTime
  localFile___root
  localFile___dir
  localFile___base
  localFile___ext
  localFile___name
  localFile___relativeDirectory
  localFile___dev
  localFile___mode
  localFile___nlink
  localFile___uid
  localFile___gid
  localFile___rdev
  localFile___ino
  localFile___atimeMs
  localFile___mtimeMs
  localFile___ctimeMs
  localFile___atime
  localFile___mtime
  localFile___ctime
  localFile___birthtime
  localFile___birthtimeMs
  localFile___blksize
  localFile___blocks
  localFile___url
  localFile___publicURL
  localFile___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___id
  localFile___parent___id
  localFile___parent___parent___id
  localFile___parent___parent___children
  localFile___parent___children
  localFile___parent___children___id
  localFile___parent___children___children
  localFile___parent___internal___content
  localFile___parent___internal___contentDigest
  localFile___parent___internal___description
  localFile___parent___internal___fieldOwners
  localFile___parent___internal___ignoreType
  localFile___parent___internal___mediaType
  localFile___parent___internal___owner
  localFile___parent___internal___type
  localFile___children
  localFile___children___id
  localFile___children___parent___id
  localFile___children___parent___children
  localFile___children___children
  localFile___children___children___id
  localFile___children___children___children
  localFile___children___internal___content
  localFile___children___internal___contentDigest
  localFile___children___internal___description
  localFile___children___internal___fieldOwners
  localFile___children___internal___ignoreType
  localFile___children___internal___mediaType
  localFile___children___internal___owner
  localFile___children___internal___type
  localFile___internal___content
  localFile___internal___contentDigest
  localFile___internal___description
  localFile___internal___fieldOwners
  localFile___internal___ignoreType
  localFile___internal___mediaType
  localFile___internal___owner
  localFile___internal___type
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type ContentfulAssetFile {
  url: String
  details: ContentfulAssetFileDetails
  fileName: String
  contentType: String
}

type ContentfulAssetFileDetails {
  size: Int
  image: ContentfulAssetFileDetailsImage
}

input ContentfulAssetFileDetailsFilterInput {
  size: IntQueryOperatorInput
  image: ContentfulAssetFileDetailsImageFilterInput
}

type ContentfulAssetFileDetailsImage {
  width: Int
  height: Int
}

input ContentfulAssetFileDetailsImageFilterInput {
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
}

input ContentfulAssetFileFilterInput {
  url: StringQueryOperatorInput
  details: ContentfulAssetFileDetailsFilterInput
  fileName: StringQueryOperatorInput
  contentType: StringQueryOperatorInput
}

input ContentfulAssetFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  contentful_id: StringQueryOperatorInput
  file: ContentfulAssetFileFilterInput
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  localFile: FileFilterInput
  fixed: ContentfulFixedFilterInput
  resolutions: ContentfulResolutionsFilterInput
  fluid: ContentfulFluidFilterInput
  sizes: ContentfulSizesFilterInput
  resize: ContentfulResizeFilterInput
}

type ContentfulAssetGroupConnection {
  totalCount: Int!
  edges: [ContentfulAssetEdge!]!
  nodes: [ContentfulAsset!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input ContentfulAssetSortInput {
  fields: [ContentfulAssetFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulComposition implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  title: String
  recording: ContentfulAsset
  description: contentfulCompositionDescriptionRichTextNode
  spaceId: String
  contentful_id: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulCompositionSys
  node_locale: String
  childContentfulCompositionDescriptionRichTextNode: contentfulCompositionDescriptionRichTextNode
}

type ContentfulCompositionConnection {
  totalCount: Int!
  edges: [ContentfulCompositionEdge!]!
  nodes: [ContentfulComposition!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulCompositionFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ContentfulCompositionFieldsEnum!): [ContentfulCompositionGroupConnection!]!
}

type contentfulCompositionDescriptionRichTextNode implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  content: [contentfulCompositionDescriptionRichTextNodeContent]
  nodeType: String @deprecated(reason: "This field is deprecated, please use 'json' instead.")
  description: String
  json: JSON
}

type contentfulCompositionDescriptionRichTextNodeConnection {
  totalCount: Int!
  edges: [contentfulCompositionDescriptionRichTextNodeEdge!]!
  nodes: [contentfulCompositionDescriptionRichTextNode!]!
  pageInfo: PageInfo!
  distinct(field: contentfulCompositionDescriptionRichTextNodeFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: contentfulCompositionDescriptionRichTextNodeFieldsEnum!): [contentfulCompositionDescriptionRichTextNodeGroupConnection!]!
}

type contentfulCompositionDescriptionRichTextNodeContent {
  content: [contentfulCompositionDescriptionRichTextNodeContentContent]
  nodeType: String
}

type contentfulCompositionDescriptionRichTextNodeContentContent {
  value: String
  nodeType: String
}

input contentfulCompositionDescriptionRichTextNodeContentContentFilterInput {
  value: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
}

input contentfulCompositionDescriptionRichTextNodeContentContentFilterListInput {
  elemMatch: contentfulCompositionDescriptionRichTextNodeContentContentFilterInput
}

input contentfulCompositionDescriptionRichTextNodeContentFilterInput {
  content: contentfulCompositionDescriptionRichTextNodeContentContentFilterListInput
  nodeType: StringQueryOperatorInput
}

input contentfulCompositionDescriptionRichTextNodeContentFilterListInput {
  elemMatch: contentfulCompositionDescriptionRichTextNodeContentFilterInput
}

type contentfulCompositionDescriptionRichTextNodeEdge {
  next: contentfulCompositionDescriptionRichTextNode
  node: contentfulCompositionDescriptionRichTextNode!
  previous: contentfulCompositionDescriptionRichTextNode
}

enum contentfulCompositionDescriptionRichTextNodeFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  content
  content___content
  content___content___value
  content___content___nodeType
  content___nodeType
  nodeType
  description
  json
}

input contentfulCompositionDescriptionRichTextNodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  content: contentfulCompositionDescriptionRichTextNodeContentFilterListInput
  nodeType: StringQueryOperatorInput
  description: StringQueryOperatorInput
  json: JSONQueryOperatorInput
}

type contentfulCompositionDescriptionRichTextNodeGroupConnection {
  totalCount: Int!
  edges: [contentfulCompositionDescriptionRichTextNodeEdge!]!
  nodes: [contentfulCompositionDescriptionRichTextNode!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input contentfulCompositionDescriptionRichTextNodeSortInput {
  fields: [contentfulCompositionDescriptionRichTextNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulCompositionEdge {
  next: ContentfulComposition
  node: ContentfulComposition!
  previous: ContentfulComposition
}

enum ContentfulCompositionFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  title
  recording___id
  recording___parent___id
  recording___parent___parent___id
  recording___parent___parent___children
  recording___parent___children
  recording___parent___children___id
  recording___parent___children___children
  recording___parent___internal___content
  recording___parent___internal___contentDigest
  recording___parent___internal___description
  recording___parent___internal___fieldOwners
  recording___parent___internal___ignoreType
  recording___parent___internal___mediaType
  recording___parent___internal___owner
  recording___parent___internal___type
  recording___children
  recording___children___id
  recording___children___parent___id
  recording___children___parent___children
  recording___children___children
  recording___children___children___id
  recording___children___children___children
  recording___children___internal___content
  recording___children___internal___contentDigest
  recording___children___internal___description
  recording___children___internal___fieldOwners
  recording___children___internal___ignoreType
  recording___children___internal___mediaType
  recording___children___internal___owner
  recording___children___internal___type
  recording___internal___content
  recording___internal___contentDigest
  recording___internal___description
  recording___internal___fieldOwners
  recording___internal___ignoreType
  recording___internal___mediaType
  recording___internal___owner
  recording___internal___type
  recording___contentful_id
  recording___file___url
  recording___file___details___size
  recording___file___fileName
  recording___file___contentType
  recording___title
  recording___description
  recording___node_locale
  recording___localFile___sourceInstanceName
  recording___localFile___absolutePath
  recording___localFile___relativePath
  recording___localFile___extension
  recording___localFile___size
  recording___localFile___prettySize
  recording___localFile___modifiedTime
  recording___localFile___accessTime
  recording___localFile___changeTime
  recording___localFile___birthTime
  recording___localFile___root
  recording___localFile___dir
  recording___localFile___base
  recording___localFile___ext
  recording___localFile___name
  recording___localFile___relativeDirectory
  recording___localFile___dev
  recording___localFile___mode
  recording___localFile___nlink
  recording___localFile___uid
  recording___localFile___gid
  recording___localFile___rdev
  recording___localFile___ino
  recording___localFile___atimeMs
  recording___localFile___mtimeMs
  recording___localFile___ctimeMs
  recording___localFile___atime
  recording___localFile___mtime
  recording___localFile___ctime
  recording___localFile___birthtime
  recording___localFile___birthtimeMs
  recording___localFile___blksize
  recording___localFile___blocks
  recording___localFile___url
  recording___localFile___publicURL
  recording___localFile___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___localFile___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___localFile___id
  recording___localFile___parent___id
  recording___localFile___parent___children
  recording___localFile___children
  recording___localFile___children___id
  recording___localFile___children___children
  recording___localFile___internal___content
  recording___localFile___internal___contentDigest
  recording___localFile___internal___description
  recording___localFile___internal___fieldOwners
  recording___localFile___internal___ignoreType
  recording___localFile___internal___mediaType
  recording___localFile___internal___owner
  recording___localFile___internal___type
  recording___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  recording___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  description___id
  description___parent___id
  description___parent___parent___id
  description___parent___parent___children
  description___parent___children
  description___parent___children___id
  description___parent___children___children
  description___parent___internal___content
  description___parent___internal___contentDigest
  description___parent___internal___description
  description___parent___internal___fieldOwners
  description___parent___internal___ignoreType
  description___parent___internal___mediaType
  description___parent___internal___owner
  description___parent___internal___type
  description___children
  description___children___id
  description___children___parent___id
  description___children___parent___children
  description___children___children
  description___children___children___id
  description___children___children___children
  description___children___internal___content
  description___children___internal___contentDigest
  description___children___internal___description
  description___children___internal___fieldOwners
  description___children___internal___ignoreType
  description___children___internal___mediaType
  description___children___internal___owner
  description___children___internal___type
  description___internal___content
  description___internal___contentDigest
  description___internal___description
  description___internal___fieldOwners
  description___internal___ignoreType
  description___internal___mediaType
  description___internal___owner
  description___internal___type
  description___content
  description___content___content
  description___content___content___value
  description___content___content___nodeType
  description___content___nodeType
  description___nodeType
  description___description
  description___json
  spaceId
  contentful_id
  createdAt
  updatedAt
  sys___revision
  sys___contentType___sys___type
  sys___contentType___sys___linkType
  sys___contentType___sys___id
  sys___contentType___sys___contentful_id
  node_locale
  childContentfulCompositionDescriptionRichTextNode___id
  childContentfulCompositionDescriptionRichTextNode___parent___id
  childContentfulCompositionDescriptionRichTextNode___parent___parent___id
  childContentfulCompositionDescriptionRichTextNode___parent___parent___children
  childContentfulCompositionDescriptionRichTextNode___parent___children
  childContentfulCompositionDescriptionRichTextNode___parent___children___id
  childContentfulCompositionDescriptionRichTextNode___parent___children___children
  childContentfulCompositionDescriptionRichTextNode___parent___internal___content
  childContentfulCompositionDescriptionRichTextNode___parent___internal___contentDigest
  childContentfulCompositionDescriptionRichTextNode___parent___internal___description
  childContentfulCompositionDescriptionRichTextNode___parent___internal___fieldOwners
  childContentfulCompositionDescriptionRichTextNode___parent___internal___ignoreType
  childContentfulCompositionDescriptionRichTextNode___parent___internal___mediaType
  childContentfulCompositionDescriptionRichTextNode___parent___internal___owner
  childContentfulCompositionDescriptionRichTextNode___parent___internal___type
  childContentfulCompositionDescriptionRichTextNode___children
  childContentfulCompositionDescriptionRichTextNode___children___id
  childContentfulCompositionDescriptionRichTextNode___children___parent___id
  childContentfulCompositionDescriptionRichTextNode___children___parent___children
  childContentfulCompositionDescriptionRichTextNode___children___children
  childContentfulCompositionDescriptionRichTextNode___children___children___id
  childContentfulCompositionDescriptionRichTextNode___children___children___children
  childContentfulCompositionDescriptionRichTextNode___children___internal___content
  childContentfulCompositionDescriptionRichTextNode___children___internal___contentDigest
  childContentfulCompositionDescriptionRichTextNode___children___internal___description
  childContentfulCompositionDescriptionRichTextNode___children___internal___fieldOwners
  childContentfulCompositionDescriptionRichTextNode___children___internal___ignoreType
  childContentfulCompositionDescriptionRichTextNode___children___internal___mediaType
  childContentfulCompositionDescriptionRichTextNode___children___internal___owner
  childContentfulCompositionDescriptionRichTextNode___children___internal___type
  childContentfulCompositionDescriptionRichTextNode___internal___content
  childContentfulCompositionDescriptionRichTextNode___internal___contentDigest
  childContentfulCompositionDescriptionRichTextNode___internal___description
  childContentfulCompositionDescriptionRichTextNode___internal___fieldOwners
  childContentfulCompositionDescriptionRichTextNode___internal___ignoreType
  childContentfulCompositionDescriptionRichTextNode___internal___mediaType
  childContentfulCompositionDescriptionRichTextNode___internal___owner
  childContentfulCompositionDescriptionRichTextNode___internal___type
  childContentfulCompositionDescriptionRichTextNode___content
  childContentfulCompositionDescriptionRichTextNode___content___content
  childContentfulCompositionDescriptionRichTextNode___content___content___value
  childContentfulCompositionDescriptionRichTextNode___content___content___nodeType
  childContentfulCompositionDescriptionRichTextNode___content___nodeType
  childContentfulCompositionDescriptionRichTextNode___nodeType
  childContentfulCompositionDescriptionRichTextNode___description
  childContentfulCompositionDescriptionRichTextNode___json
}

input ContentfulCompositionFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  title: StringQueryOperatorInput
  recording: ContentfulAssetFilterInput
  description: contentfulCompositionDescriptionRichTextNodeFilterInput
  spaceId: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulCompositionSysFilterInput
  node_locale: StringQueryOperatorInput
  childContentfulCompositionDescriptionRichTextNode: contentfulCompositionDescriptionRichTextNodeFilterInput
}

type ContentfulCompositionGroupConnection {
  totalCount: Int!
  edges: [ContentfulCompositionEdge!]!
  nodes: [ContentfulComposition!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input ContentfulCompositionSortInput {
  fields: [ContentfulCompositionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulCompositionSys {
  revision: Int
  contentType: ContentfulCompositionSysContentType
}

type ContentfulCompositionSysContentType {
  sys: ContentfulCompositionSysContentTypeSys
}

input ContentfulCompositionSysContentTypeFilterInput {
  sys: ContentfulCompositionSysContentTypeSysFilterInput
}

type ContentfulCompositionSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

input ContentfulCompositionSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
}

input ContentfulCompositionSysFilterInput {
  revision: IntQueryOperatorInput
  contentType: ContentfulCompositionSysContentTypeFilterInput
}

type ContentfulContentType implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  name: String
  displayField: String
  description: String
}

type ContentfulContentTypeConnection {
  totalCount: Int!
  edges: [ContentfulContentTypeEdge!]!
  nodes: [ContentfulContentType!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulContentTypeFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ContentfulContentTypeFieldsEnum!): [ContentfulContentTypeGroupConnection!]!
}

type ContentfulContentTypeEdge {
  next: ContentfulContentType
  node: ContentfulContentType!
  previous: ContentfulContentType
}

enum ContentfulContentTypeFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  displayField
  description
}

input ContentfulContentTypeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  displayField: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

type ContentfulContentTypeGroupConnection {
  totalCount: Int!
  edges: [ContentfulContentTypeEdge!]!
  nodes: [ContentfulContentType!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input ContentfulContentTypeSortInput {
  fields: [ContentfulContentTypeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
}

input ContentfulFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
}

type ContentfulFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
}

input ContentfulFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
}

enum ContentfulImageCropFocus {
  TOP
  TOP_LEFT
  TOP_RIGHT
  BOTTOM
  BOTTOM_RIGHT
  BOTTOM_LEFT
  RIGHT
  LEFT
  FACE
  FACES
  CENTER
}

enum ContentfulImageFormat {
  NO_CHANGE
  JPG
  PNG
  WEBP
}

type ContentfulJob implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  title: String
  company: String
  location: ContentfulJobLocation
  startDate(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  startPay: Float
  isHourly: Boolean
  city: String
  state: String
  description: contentfulJobDescriptionRichTextNode
  spaceId: String
  contentful_id: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulJobSys
  node_locale: String
  endDate(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  endPay: Int
  childContentfulJobDescriptionRichTextNode: contentfulJobDescriptionRichTextNode
}

type ContentfulJobConnection {
  totalCount: Int!
  edges: [ContentfulJobEdge!]!
  nodes: [ContentfulJob!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulJobFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ContentfulJobFieldsEnum!): [ContentfulJobGroupConnection!]!
}

type contentfulJobDescriptionRichTextNode implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  content: [contentfulJobDescriptionRichTextNodeContent]
  nodeType: String @deprecated(reason: "This field is deprecated, please use 'json' instead.")
  description: String
  json: JSON
}

type contentfulJobDescriptionRichTextNodeConnection {
  totalCount: Int!
  edges: [contentfulJobDescriptionRichTextNodeEdge!]!
  nodes: [contentfulJobDescriptionRichTextNode!]!
  pageInfo: PageInfo!
  distinct(field: contentfulJobDescriptionRichTextNodeFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: contentfulJobDescriptionRichTextNodeFieldsEnum!): [contentfulJobDescriptionRichTextNodeGroupConnection!]!
}

type contentfulJobDescriptionRichTextNodeContent {
  content: [contentfulJobDescriptionRichTextNodeContentContent]
  nodeType: String
}

type contentfulJobDescriptionRichTextNodeContentContent {
  value: String
  nodeType: String
  content: [contentfulJobDescriptionRichTextNodeContentContentContent]
}

type contentfulJobDescriptionRichTextNodeContentContentContent {
  content: [contentfulJobDescriptionRichTextNodeContentContentContentContent]
  nodeType: String
}

type contentfulJobDescriptionRichTextNodeContentContentContentContent {
  value: String
  nodeType: String
}

input contentfulJobDescriptionRichTextNodeContentContentContentContentFilterInput {
  value: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
}

input contentfulJobDescriptionRichTextNodeContentContentContentContentFilterListInput {
  elemMatch: contentfulJobDescriptionRichTextNodeContentContentContentContentFilterInput
}

input contentfulJobDescriptionRichTextNodeContentContentContentFilterInput {
  content: contentfulJobDescriptionRichTextNodeContentContentContentContentFilterListInput
  nodeType: StringQueryOperatorInput
}

input contentfulJobDescriptionRichTextNodeContentContentContentFilterListInput {
  elemMatch: contentfulJobDescriptionRichTextNodeContentContentContentFilterInput
}

input contentfulJobDescriptionRichTextNodeContentContentFilterInput {
  value: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  content: contentfulJobDescriptionRichTextNodeContentContentContentFilterListInput
}

input contentfulJobDescriptionRichTextNodeContentContentFilterListInput {
  elemMatch: contentfulJobDescriptionRichTextNodeContentContentFilterInput
}

input contentfulJobDescriptionRichTextNodeContentFilterInput {
  content: contentfulJobDescriptionRichTextNodeContentContentFilterListInput
  nodeType: StringQueryOperatorInput
}

input contentfulJobDescriptionRichTextNodeContentFilterListInput {
  elemMatch: contentfulJobDescriptionRichTextNodeContentFilterInput
}

type contentfulJobDescriptionRichTextNodeEdge {
  next: contentfulJobDescriptionRichTextNode
  node: contentfulJobDescriptionRichTextNode!
  previous: contentfulJobDescriptionRichTextNode
}

enum contentfulJobDescriptionRichTextNodeFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  content
  content___content
  content___content___value
  content___content___nodeType
  content___content___content
  content___content___content___content
  content___content___content___nodeType
  content___nodeType
  nodeType
  description
  json
}

input contentfulJobDescriptionRichTextNodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  content: contentfulJobDescriptionRichTextNodeContentFilterListInput
  nodeType: StringQueryOperatorInput
  description: StringQueryOperatorInput
  json: JSONQueryOperatorInput
}

type contentfulJobDescriptionRichTextNodeGroupConnection {
  totalCount: Int!
  edges: [contentfulJobDescriptionRichTextNodeEdge!]!
  nodes: [contentfulJobDescriptionRichTextNode!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input contentfulJobDescriptionRichTextNodeSortInput {
  fields: [contentfulJobDescriptionRichTextNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulJobEdge {
  next: ContentfulJob
  node: ContentfulJob!
  previous: ContentfulJob
}

enum ContentfulJobFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  title
  company
  location___lon
  location___lat
  startDate
  startPay
  isHourly
  city
  state
  description___id
  description___parent___id
  description___parent___parent___id
  description___parent___parent___children
  description___parent___children
  description___parent___children___id
  description___parent___children___children
  description___parent___internal___content
  description___parent___internal___contentDigest
  description___parent___internal___description
  description___parent___internal___fieldOwners
  description___parent___internal___ignoreType
  description___parent___internal___mediaType
  description___parent___internal___owner
  description___parent___internal___type
  description___children
  description___children___id
  description___children___parent___id
  description___children___parent___children
  description___children___children
  description___children___children___id
  description___children___children___children
  description___children___internal___content
  description___children___internal___contentDigest
  description___children___internal___description
  description___children___internal___fieldOwners
  description___children___internal___ignoreType
  description___children___internal___mediaType
  description___children___internal___owner
  description___children___internal___type
  description___internal___content
  description___internal___contentDigest
  description___internal___description
  description___internal___fieldOwners
  description___internal___ignoreType
  description___internal___mediaType
  description___internal___owner
  description___internal___type
  description___content
  description___content___content
  description___content___content___value
  description___content___content___nodeType
  description___content___content___content
  description___content___nodeType
  description___nodeType
  description___description
  description___json
  spaceId
  contentful_id
  createdAt
  updatedAt
  sys___revision
  sys___contentType___sys___type
  sys___contentType___sys___linkType
  sys___contentType___sys___id
  sys___contentType___sys___contentful_id
  node_locale
  endDate
  endPay
  childContentfulJobDescriptionRichTextNode___id
  childContentfulJobDescriptionRichTextNode___parent___id
  childContentfulJobDescriptionRichTextNode___parent___parent___id
  childContentfulJobDescriptionRichTextNode___parent___parent___children
  childContentfulJobDescriptionRichTextNode___parent___children
  childContentfulJobDescriptionRichTextNode___parent___children___id
  childContentfulJobDescriptionRichTextNode___parent___children___children
  childContentfulJobDescriptionRichTextNode___parent___internal___content
  childContentfulJobDescriptionRichTextNode___parent___internal___contentDigest
  childContentfulJobDescriptionRichTextNode___parent___internal___description
  childContentfulJobDescriptionRichTextNode___parent___internal___fieldOwners
  childContentfulJobDescriptionRichTextNode___parent___internal___ignoreType
  childContentfulJobDescriptionRichTextNode___parent___internal___mediaType
  childContentfulJobDescriptionRichTextNode___parent___internal___owner
  childContentfulJobDescriptionRichTextNode___parent___internal___type
  childContentfulJobDescriptionRichTextNode___children
  childContentfulJobDescriptionRichTextNode___children___id
  childContentfulJobDescriptionRichTextNode___children___parent___id
  childContentfulJobDescriptionRichTextNode___children___parent___children
  childContentfulJobDescriptionRichTextNode___children___children
  childContentfulJobDescriptionRichTextNode___children___children___id
  childContentfulJobDescriptionRichTextNode___children___children___children
  childContentfulJobDescriptionRichTextNode___children___internal___content
  childContentfulJobDescriptionRichTextNode___children___internal___contentDigest
  childContentfulJobDescriptionRichTextNode___children___internal___description
  childContentfulJobDescriptionRichTextNode___children___internal___fieldOwners
  childContentfulJobDescriptionRichTextNode___children___internal___ignoreType
  childContentfulJobDescriptionRichTextNode___children___internal___mediaType
  childContentfulJobDescriptionRichTextNode___children___internal___owner
  childContentfulJobDescriptionRichTextNode___children___internal___type
  childContentfulJobDescriptionRichTextNode___internal___content
  childContentfulJobDescriptionRichTextNode___internal___contentDigest
  childContentfulJobDescriptionRichTextNode___internal___description
  childContentfulJobDescriptionRichTextNode___internal___fieldOwners
  childContentfulJobDescriptionRichTextNode___internal___ignoreType
  childContentfulJobDescriptionRichTextNode___internal___mediaType
  childContentfulJobDescriptionRichTextNode___internal___owner
  childContentfulJobDescriptionRichTextNode___internal___type
  childContentfulJobDescriptionRichTextNode___content
  childContentfulJobDescriptionRichTextNode___content___content
  childContentfulJobDescriptionRichTextNode___content___content___value
  childContentfulJobDescriptionRichTextNode___content___content___nodeType
  childContentfulJobDescriptionRichTextNode___content___content___content
  childContentfulJobDescriptionRichTextNode___content___nodeType
  childContentfulJobDescriptionRichTextNode___nodeType
  childContentfulJobDescriptionRichTextNode___description
  childContentfulJobDescriptionRichTextNode___json
}

input ContentfulJobFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  title: StringQueryOperatorInput
  company: StringQueryOperatorInput
  location: ContentfulJobLocationFilterInput
  startDate: DateQueryOperatorInput
  startPay: FloatQueryOperatorInput
  isHourly: BooleanQueryOperatorInput
  city: StringQueryOperatorInput
  state: StringQueryOperatorInput
  description: contentfulJobDescriptionRichTextNodeFilterInput
  spaceId: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulJobSysFilterInput
  node_locale: StringQueryOperatorInput
  endDate: DateQueryOperatorInput
  endPay: IntQueryOperatorInput
  childContentfulJobDescriptionRichTextNode: contentfulJobDescriptionRichTextNodeFilterInput
}

type ContentfulJobGroupConnection {
  totalCount: Int!
  edges: [ContentfulJobEdge!]!
  nodes: [ContentfulJob!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type ContentfulJobLocation {
  lon: Float
  lat: Float
}

input ContentfulJobLocationFilterInput {
  lon: FloatQueryOperatorInput
  lat: FloatQueryOperatorInput
}

input ContentfulJobSortInput {
  fields: [ContentfulJobFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulJobSys {
  revision: Int
  contentType: ContentfulJobSysContentType
}

type ContentfulJobSysContentType {
  sys: ContentfulJobSysContentTypeSys
}

input ContentfulJobSysContentTypeFilterInput {
  sys: ContentfulJobSysContentTypeSysFilterInput
}

type ContentfulJobSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

input ContentfulJobSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
}

input ContentfulJobSysFilterInput {
  revision: IntQueryOperatorInput
  contentType: ContentfulJobSysContentTypeFilterInput
}

type ContentfulResize {
  base64: String
  tracedSVG: String
  src: String
  width: Int
  height: Int
  aspectRatio: Float
}

input ContentfulResizeFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  src: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
}

type ContentfulResolutions {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
}

input ContentfulResolutionsFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
}

type ContentfulSchool implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  name: String
  location: ContentfulSchoolLocation
  startDate(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  endDate(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  major: [String]
  minor: [String]
  concentration: [String]
  gpa: Int
  inProgress: Boolean
  city: String
  state: String
  logo: ContentfulAsset
  spaceId: String
  contentful_id: String
  createdAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  updatedAt(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
  sys: ContentfulSchoolSys
  node_locale: String
}

type ContentfulSchoolConnection {
  totalCount: Int!
  edges: [ContentfulSchoolEdge!]!
  nodes: [ContentfulSchool!]!
  pageInfo: PageInfo!
  distinct(field: ContentfulSchoolFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ContentfulSchoolFieldsEnum!): [ContentfulSchoolGroupConnection!]!
}

type ContentfulSchoolEdge {
  next: ContentfulSchool
  node: ContentfulSchool!
  previous: ContentfulSchool
}

enum ContentfulSchoolFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  location___lon
  location___lat
  startDate
  endDate
  major
  minor
  concentration
  gpa
  inProgress
  city
  state
  logo___id
  logo___parent___id
  logo___parent___parent___id
  logo___parent___parent___children
  logo___parent___children
  logo___parent___children___id
  logo___parent___children___children
  logo___parent___internal___content
  logo___parent___internal___contentDigest
  logo___parent___internal___description
  logo___parent___internal___fieldOwners
  logo___parent___internal___ignoreType
  logo___parent___internal___mediaType
  logo___parent___internal___owner
  logo___parent___internal___type
  logo___children
  logo___children___id
  logo___children___parent___id
  logo___children___parent___children
  logo___children___children
  logo___children___children___id
  logo___children___children___children
  logo___children___internal___content
  logo___children___internal___contentDigest
  logo___children___internal___description
  logo___children___internal___fieldOwners
  logo___children___internal___ignoreType
  logo___children___internal___mediaType
  logo___children___internal___owner
  logo___children___internal___type
  logo___internal___content
  logo___internal___contentDigest
  logo___internal___description
  logo___internal___fieldOwners
  logo___internal___ignoreType
  logo___internal___mediaType
  logo___internal___owner
  logo___internal___type
  logo___contentful_id
  logo___file___url
  logo___file___details___size
  logo___file___fileName
  logo___file___contentType
  logo___title
  logo___description
  logo___node_locale
  logo___localFile___sourceInstanceName
  logo___localFile___absolutePath
  logo___localFile___relativePath
  logo___localFile___extension
  logo___localFile___size
  logo___localFile___prettySize
  logo___localFile___modifiedTime
  logo___localFile___accessTime
  logo___localFile___changeTime
  logo___localFile___birthTime
  logo___localFile___root
  logo___localFile___dir
  logo___localFile___base
  logo___localFile___ext
  logo___localFile___name
  logo___localFile___relativeDirectory
  logo___localFile___dev
  logo___localFile___mode
  logo___localFile___nlink
  logo___localFile___uid
  logo___localFile___gid
  logo___localFile___rdev
  logo___localFile___ino
  logo___localFile___atimeMs
  logo___localFile___mtimeMs
  logo___localFile___ctimeMs
  logo___localFile___atime
  logo___localFile___mtime
  logo___localFile___ctime
  logo___localFile___birthtime
  logo___localFile___birthtimeMs
  logo___localFile___blksize
  logo___localFile___blocks
  logo___localFile___url
  logo___localFile___publicURL
  logo___localFile___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___localFile___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___localFile___id
  logo___localFile___parent___id
  logo___localFile___parent___children
  logo___localFile___children
  logo___localFile___children___id
  logo___localFile___children___children
  logo___localFile___internal___content
  logo___localFile___internal___contentDigest
  logo___localFile___internal___description
  logo___localFile___internal___fieldOwners
  logo___localFile___internal___ignoreType
  logo___localFile___internal___mediaType
  logo___localFile___internal___owner
  logo___localFile___internal___type
  logo___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  logo___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  spaceId
  contentful_id
  createdAt
  updatedAt
  sys___revision
  sys___contentType___sys___type
  sys___contentType___sys___linkType
  sys___contentType___sys___id
  sys___contentType___sys___contentful_id
  node_locale
}

input ContentfulSchoolFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  location: ContentfulSchoolLocationFilterInput
  startDate: DateQueryOperatorInput
  endDate: DateQueryOperatorInput
  major: StringQueryOperatorInput
  minor: StringQueryOperatorInput
  concentration: StringQueryOperatorInput
  gpa: IntQueryOperatorInput
  inProgress: BooleanQueryOperatorInput
  city: StringQueryOperatorInput
  state: StringQueryOperatorInput
  logo: ContentfulAssetFilterInput
  spaceId: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  sys: ContentfulSchoolSysFilterInput
  node_locale: StringQueryOperatorInput
}

type ContentfulSchoolGroupConnection {
  totalCount: Int!
  edges: [ContentfulSchoolEdge!]!
  nodes: [ContentfulSchool!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type ContentfulSchoolLocation {
  lon: Float
  lat: Float
}

input ContentfulSchoolLocationFilterInput {
  lon: FloatQueryOperatorInput
  lat: FloatQueryOperatorInput
}

input ContentfulSchoolSortInput {
  fields: [ContentfulSchoolFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentfulSchoolSys {
  revision: Int
  contentType: ContentfulSchoolSysContentType
}

type ContentfulSchoolSysContentType {
  sys: ContentfulSchoolSysContentTypeSys
}

input ContentfulSchoolSysContentTypeFilterInput {
  sys: ContentfulSchoolSysContentTypeSysFilterInput
}

type ContentfulSchoolSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

input ContentfulSchoolSysContentTypeSysFilterInput {
  type: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  id: StringQueryOperatorInput
  contentful_id: StringQueryOperatorInput
}

input ContentfulSchoolSysFilterInput {
  revision: IntQueryOperatorInput
  contentType: ContentfulSchoolSysContentTypeFilterInput
}

type ContentfulSizes {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
}

input ContentfulSizesFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
}

"""
A date string, such as 2007-12-03, compliant with the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  accessTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  changeTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  birthTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  mtime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  ctime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  accessTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  changeTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  birthTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  mtime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  ctime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String

  """Copy file to static directory and return public url to it"""
  publicURL: String
  childImageSharp: ImageSharp
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  url
  publicURL
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  url: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

type GithubData implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  data: GithubDataData
}

type GithubDataConnection {
  totalCount: Int!
  edges: [GithubDataEdge!]!
  nodes: [GithubData!]!
  pageInfo: PageInfo!
  distinct(field: GithubDataFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: GithubDataFieldsEnum!): [GithubDataGroupConnection!]!
}

type GithubDataData {
  user: GithubDataDataUser
}

input GithubDataDataFilterInput {
  user: GithubDataDataUserFilterInput
}

type GithubDataDataUser {
  pinnedItems: GithubDataDataUserPinnedItems
}

input GithubDataDataUserFilterInput {
  pinnedItems: GithubDataDataUserPinnedItemsFilterInput
}

type GithubDataDataUserPinnedItems {
  nodes: [GithubDataDataUserPinnedItemsNodes]
}

input GithubDataDataUserPinnedItemsFilterInput {
  nodes: GithubDataDataUserPinnedItemsNodesFilterListInput
}

type GithubDataDataUserPinnedItemsNodes {
  name: String
  url: String
  description: String
  homepageUrl: String
  object: GithubDataDataUserPinnedItemsNodesObject
}

input GithubDataDataUserPinnedItemsNodesFilterInput {
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
  description: StringQueryOperatorInput
  homepageUrl: StringQueryOperatorInput
  object: GithubDataDataUserPinnedItemsNodesObjectFilterInput
}

input GithubDataDataUserPinnedItemsNodesFilterListInput {
  elemMatch: GithubDataDataUserPinnedItemsNodesFilterInput
}

type GithubDataDataUserPinnedItemsNodesObject {
  text: String
}

input GithubDataDataUserPinnedItemsNodesObjectFilterInput {
  text: StringQueryOperatorInput
}

type GithubDataEdge {
  next: GithubData
  node: GithubData!
  previous: GithubData
}

enum GithubDataFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  data___user___pinnedItems___nodes
}

input GithubDataFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  data: GithubDataDataFilterInput
}

type GithubDataGroupConnection {
  totalCount: Int!
  edges: [GithubDataEdge!]!
  nodes: [GithubData!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input GithubDataSortInput {
  fields: [GithubDataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
}

enum ImageFormat {
  NO_CHANGE
  JPG
  PNG
  WEBP
}

enum ImageResizingBehavior {
  NO_CHANGE

  """
  Same as the default resizing, but adds padding so that the generated image has the specified dimensions.
  """
  PAD

  """Crop a part of the original image to match the specified size."""
  CROP

  """
  Crop the image to the specified dimensions, if the original image is smaller
  than these dimensions, then the image will be upscaled.
  """
  FILL

  """
  When used in association with the f parameter below, creates a thumbnail from the image based on a focus area.
  """
  THUMB

  """Scale the image regardless of the original aspect ratio."""
  SCALE
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  resolutions(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    """
    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    """
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  sizes(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    """
    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    """
    srcSetBreakpoints: [Int] = []
  ): ImageSharpSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  fluid: ImageSharpFluidFilterInput
  sizes: ImageSharpSizesFilterInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int
  presentationHeight: Int
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpResolutions {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

input ImageSharpResolutionsFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpSizes {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int
  presentationHeight: Int
}

input ImageSharpSizesFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

"""Node Interface"""
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

type Query {
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, url: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput, componentPath: StringQueryOperatorInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, resolutions: ImageSharpResolutionsFilterInput, fluid: ImageSharpFluidFilterInput, sizes: ImageSharpSizesFilterInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  contentfulCompositionDescriptionRichTextNode(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, content: contentfulCompositionDescriptionRichTextNodeContentFilterListInput, nodeType: StringQueryOperatorInput, description: StringQueryOperatorInput, json: JSONQueryOperatorInput): contentfulCompositionDescriptionRichTextNode
  allContentfulCompositionDescriptionRichTextNode(filter: contentfulCompositionDescriptionRichTextNodeFilterInput, sort: contentfulCompositionDescriptionRichTextNodeSortInput, skip: Int, limit: Int): contentfulCompositionDescriptionRichTextNodeConnection!
  githubData(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, data: GithubDataDataFilterInput): GithubData
  allGithubData(filter: GithubDataFilterInput, sort: GithubDataSortInput, skip: Int, limit: Int): GithubDataConnection!
  contentfulComposition(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, title: StringQueryOperatorInput, recording: ContentfulAssetFilterInput, description: contentfulCompositionDescriptionRichTextNodeFilterInput, spaceId: StringQueryOperatorInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulCompositionSysFilterInput, node_locale: StringQueryOperatorInput, childContentfulCompositionDescriptionRichTextNode: contentfulCompositionDescriptionRichTextNodeFilterInput): ContentfulComposition
  allContentfulComposition(filter: ContentfulCompositionFilterInput, sort: ContentfulCompositionSortInput, skip: Int, limit: Int): ContentfulCompositionConnection!
  contentfulAsset(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, contentful_id: StringQueryOperatorInput, file: ContentfulAssetFileFilterInput, title: StringQueryOperatorInput, description: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, localFile: FileFilterInput, fixed: ContentfulFixedFilterInput, resolutions: ContentfulResolutionsFilterInput, fluid: ContentfulFluidFilterInput, sizes: ContentfulSizesFilterInput, resize: ContentfulResizeFilterInput): ContentfulAsset
  allContentfulAsset(filter: ContentfulAssetFilterInput, sort: ContentfulAssetSortInput, skip: Int, limit: Int): ContentfulAssetConnection!
  contentfulSchool(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, name: StringQueryOperatorInput, location: ContentfulSchoolLocationFilterInput, startDate: DateQueryOperatorInput, endDate: DateQueryOperatorInput, major: StringQueryOperatorInput, minor: StringQueryOperatorInput, concentration: StringQueryOperatorInput, gpa: IntQueryOperatorInput, inProgress: BooleanQueryOperatorInput, city: StringQueryOperatorInput, state: StringQueryOperatorInput, logo: ContentfulAssetFilterInput, spaceId: StringQueryOperatorInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulSchoolSysFilterInput, node_locale: StringQueryOperatorInput): ContentfulSchool
  allContentfulSchool(filter: ContentfulSchoolFilterInput, sort: ContentfulSchoolSortInput, skip: Int, limit: Int): ContentfulSchoolConnection!
  contentfulJobDescriptionRichTextNode(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, content: contentfulJobDescriptionRichTextNodeContentFilterListInput, nodeType: StringQueryOperatorInput, description: StringQueryOperatorInput, json: JSONQueryOperatorInput): contentfulJobDescriptionRichTextNode
  allContentfulJobDescriptionRichTextNode(filter: contentfulJobDescriptionRichTextNodeFilterInput, sort: contentfulJobDescriptionRichTextNodeSortInput, skip: Int, limit: Int): contentfulJobDescriptionRichTextNodeConnection!
  contentfulJob(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, title: StringQueryOperatorInput, company: StringQueryOperatorInput, location: ContentfulJobLocationFilterInput, startDate: DateQueryOperatorInput, startPay: FloatQueryOperatorInput, isHourly: BooleanQueryOperatorInput, city: StringQueryOperatorInput, state: StringQueryOperatorInput, description: contentfulJobDescriptionRichTextNodeFilterInput, spaceId: StringQueryOperatorInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, sys: ContentfulJobSysFilterInput, node_locale: StringQueryOperatorInput, endDate: DateQueryOperatorInput, endPay: IntQueryOperatorInput, childContentfulJobDescriptionRichTextNode: contentfulJobDescriptionRichTextNodeFilterInput): ContentfulJob
  allContentfulJob(filter: ContentfulJobFilterInput, sort: ContentfulJobSortInput, skip: Int, limit: Int): ContentfulJobConnection!
  contentfulContentType(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, name: StringQueryOperatorInput, displayField: StringQueryOperatorInput, description: StringQueryOperatorInput): ContentfulContentType
  allContentfulContentType(filter: ContentfulContentTypeFilterInput, sort: ContentfulContentTypeSortInput, skip: Int, limit: Int): ContentfulContentTypeConnection!
  site(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, buildTime: DateQueryOperatorInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
}

type Site implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  polyfill: Boolean
  pathPrefix: String
  buildTime(
    """
    Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    documentation for different tokens.
    """
    formatString: String

    """Returns a string generated with Moment.js' `fromNow` function"""
    fromNow: Boolean

    """
    Returns the difference between this date and the current time. Defaults to
    "milliseconds" but you can also pass in as the measurement "years",
    "months", "weeks", "days", "hours", "minutes", and "seconds".
    """
    difference: String

    """Configures the locale Moment.js will use to format the date."""
    locale: String
  ): Date
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  siteMetadata___title
  siteMetadata___description
  siteMetadata___author
  port
  host
  polyfill
  pathPrefix
  buildTime
}

input SiteFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  buildTime: DateQueryOperatorInput
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  isCreatedByStatefulCreatePages: Boolean
  context: SitePageContext
  pluginCreator: SitePlugin
  pluginCreatorId: String
  componentPath: String
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageContext {
  repo: SitePageContextRepo
}

input SitePageContextFilterInput {
  repo: SitePageContextRepoFilterInput
}

type SitePageContextRepo {
  name: String
  description: String
  homepageUrl: String
  url: String
  object: SitePageContextRepoObject
}

input SitePageContextRepoFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  homepageUrl: StringQueryOperatorInput
  url: StringQueryOperatorInput
  object: SitePageContextRepoObjectFilterInput
}

type SitePageContextRepoObject {
  text: String
}

input SitePageContextRepoObjectFilterInput {
  text: StringQueryOperatorInput
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  context___repo___name
  context___repo___description
  context___repo___homepageUrl
  context___repo___url
  context___repo___object___text
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___short_name
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___background_color
  pluginCreator___pluginOptions___theme_color
  pluginCreator___pluginOptions___display
  pluginCreator___pluginOptions___token
  pluginCreator___pluginOptions___graphQLQuery
  pluginCreator___pluginOptions___spaceId
  pluginCreator___pluginOptions___accessToken
  pluginCreator___pluginOptions___downloadLocal
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreatorId
  componentPath
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  context: SitePageContextFilterInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePlugin implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  resolve: String
  name: String
  version: String
  pluginOptions: SitePluginPluginOptions
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  packageJson: SitePluginPackageJson
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  resolve
  name
  version
  pluginOptions___name
  pluginOptions___path
  pluginOptions___short_name
  pluginOptions___start_url
  pluginOptions___background_color
  pluginOptions___theme_color
  pluginOptions___display
  pluginOptions___token
  pluginOptions___graphQLQuery
  pluginOptions___spaceId
  pluginOptions___accessToken
  pluginOptions___downloadLocal
  pluginOptions___pathCheck
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
}

input SitePluginFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

type SitePluginPluginOptions {
  name: String
  path: String
  short_name: String
  start_url: String
  background_color: String
  theme_color: String
  display: String
  token: String
  graphQLQuery: String
  spaceId: String
  accessToken: String
  downloadLocal: Boolean
  pathCheck: Boolean
}

input SitePluginPluginOptionsFilterInput {
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  short_name: StringQueryOperatorInput
  start_url: StringQueryOperatorInput
  background_color: StringQueryOperatorInput
  theme_color: StringQueryOperatorInput
  display: StringQueryOperatorInput
  token: StringQueryOperatorInput
  graphQLQuery: StringQueryOperatorInput
  spaceId: StringQueryOperatorInput
  accessToken: StringQueryOperatorInput
  downloadLocal: BooleanQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteSiteMetadata {
  title: String
  description: String
  author: String
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  author: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}
