{"version":3,"sources":["webpack:///./src/components/soundcloud.tsx","webpack:///./src/components/composition.tsx","webpack:///./src/sections/compositions.tsx","webpack:///./src/utils/useCompositions.ts","webpack:///./src/components/youtube.tsx","webpack:///./src/components/performance.tsx","webpack:///./src/sections/performances.tsx","webpack:///./src/utils/usePerformances.ts","webpack:///./src/pages/music.tsx"],"names":["SoundCloud","song","width","height","scrolling","frameBorder","allow","src","Composition","composition","className","title","documentToReactComponents","description","json","recording","Compositions","compositions","useStaticQuery","allContentfulMusic","nodes","style","marginBottom","map","i","key","Youtube","video","minHeight","backgroundColor","allowFullScreen","Performance","performance","group","Performances","performances","featuredPerformances","allContentfulFeatured","sitePerformances","allPerformances","orderBy","usePerformances","ungroupedPerformances","groupBy","useState","activeGroup","setActiveGroup","dropDownIsExpanded","setDropDownIsExpanded","handleSetActiveGroup","onClick","aria-haspopup","aria-controls","background","border","color","padding","borderBottom","aria-hidden","id","role","Object","keys","Music"],"mappings":"+KAmBeA,EAbI,SAAC,GAA4B,IAA3BC,EAA2B,EAA3BA,KACjB,OACI,0BACIC,MAAM,OACNC,OAAO,OACPC,UAAU,KACVC,YAAY,KACZC,MAAM,WACNC,IAAKN,KCaFO,EAlBK,SAAC,GAAoC,IAAnCC,EAAmC,EAAnCA,YAClB,OACI,uBAAKC,UAAU,OACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,UACX,sBAAIA,UAAU,cAAcD,EAAYE,OACxC,uBAAKD,UAAU,WACVE,oCAA0BH,EAAYI,YAAYC,QAG3D,uBAAKJ,UAAU,UACX,gBAAC,EAAD,CAAYT,KAAMQ,EAAYM,gBCInCC,EAnBM,WACjB,IAAMC,ECAFC,yBAAe,cADfC,mBAAqBC,MDGzB,OACI,gBAAC,IAAD,CAAST,MAAM,eACX,qBAAGD,UAAU,mBAAmBW,MAAO,CAACC,aAAc,SAAtD,8LAKA,uBAAKZ,UAAU,aACVO,EAAaM,KAAI,SAACd,EAAae,GAAd,OACd,gBAAC,EAAD,CAAaf,YAAaA,EAAagB,IAAKD,U,iCEGjDE,EAdC,SAAC,GAA0B,IAAzBC,EAAyB,EAAzBA,MACd,OACI,0BACIzB,MAAM,OACNC,OAAO,OACPkB,MAAO,CAACO,UAAW,QAASC,gBAAiB,QAC7CtB,IAAKoB,EACLtB,YAAY,IACZC,MAAM,0EACNwB,iBAAiB,KCedC,EArBK,SAAC,GAAoC,IAAnCC,EAAmC,EAAnCA,YAClB,OACI,uBAAKtB,UAAU,kBACX,uBAAKA,UAAU,OAAOW,MAAO,CAAClB,OAAQ,SAClC,uBAAKO,UAAU,cACX,uBAAKA,UAAU,YACX,gBAAC,EAAD,CAASiB,MAAOK,EAAYjB,cAGpC,uBAAKL,UAAU,gBACX,sBAAIA,UAAU,cAAcsB,EAAYrB,OACxC,qBAAGD,UAAU,iBAAiBsB,EAAYC,OAC1C,uBAAKvB,UAAU,WACVE,oCAA0BoB,EAAYnB,YAAYC,W,qCC0D5DoB,EAxEM,WAAM,MCCZ,WAAyC,MAIhDhB,yBAAe,cAFaiB,EAFoB,EAEhDhB,mBAAqBC,MAgCzB,MAAO,CACHgB,qBAnCgD,EAGhDC,sBAAwBjB,MAHwB,GAGfkB,iBAiCjCC,gBAAiBC,IAAQL,EAAc,OAAQ,SDpCoBM,GAA/CC,EADD,EAChBH,gBAAwCH,EADxB,EACwBA,qBACzCG,EAAkBI,IAAQD,EAAuB,SAFhC,EAGeE,mBAAS,cAAxCC,EAHgB,KAGHC,EAHG,OAI6BF,oBAAS,GAAtDG,EAJgB,KAIIC,EAJJ,KAKjBb,EAA+B,eAAhBU,EAA+BT,EAAuBG,EAAgBM,GAE3F,SAASI,EAAqBhB,GAC1B,OAAO,kBAAMa,EAAyB,eAAVb,EAAyB,aAAeA,IAOxE,OACI,kBAAC,IAAD,CAAStB,MAAM,eACX,uBAAGD,UAAU,oBAAb,mSAMA,6BACA,6BACA,kBAAC,IAAD,oCAEqB,eAAhBmC,EAA+B,gBAAkB,QAFtD,yBAII,yBAAKnC,UAAWqC,EAAqB,qBAAuB,WAAYG,QAlBpF,WACIF,GAAuBD,KAkBX,yBAAKrC,UAAU,oBACX,4BACIA,UAAU,SACVyC,gBAAc,OACdC,gBAAc,gBACd/B,MAAO,CACHgC,WAAY,OACZC,OAAQ,OACRC,MAAO,QACPC,QAAS,IACTrD,OAAQ,YAGZ,0BAAMkB,MAAO,CAACoC,aAAc,oBAAqBZ,GACjD,0BAAMnC,UAAU,iBACZ,uBAAGA,UAAU,oBAAoBgD,cAAY,YAIzD,yBAAKhD,UAAU,gBAAgBiD,GAAG,gBAAgBC,KAAK,QACnD,yBAAKlD,UAAU,oBACV,CAAC,cAAD,mBAAkBmD,OAAOC,KAAKvB,KAAkBhB,KAAI,SAAAU,GAAK,OACtD,uBAAGvB,UAAU,gBAAgBe,IAAKQ,EAAOiB,QAASD,EAAqBhB,IAClEA,UAOzB,6BACA,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,wBACVyB,EAAaZ,KAAI,SAACS,EAAaR,GAAd,OACd,kBAAC,EAAD,CAAaQ,YAAaA,EAAaP,IAAKD,WEnDrDuC,UAfD,kBACV,gBAAC,IAAD,CAAQpD,MAAM,SACV,2BAASD,UAAU,iBACf,uBAAKA,UAAU,aACX,gBAAC,EAAD,QAGR,2BAASA,UAAU,iBACf,uBAAKA,UAAU,aACX,gBAAC,EAAD","file":"component---src-pages-music-tsx-273fb84118963917375d.js","sourcesContent":["import * as React from \"react\";\n\ninterface SoundCloudProps {\n    song: string;\n}\n\nconst SoundCloud = ({song}: SoundCloudProps) => {\n    return (\n        <iframe\n            width=\"100%\"\n            height=\"100%\"\n            scrolling=\"no\"\n            frameBorder=\"no\"\n            allow=\"autoplay\"\n            src={song}\n        />\n    );\n};\n\nexport default SoundCloud;\n","import * as React from \"react\";\nimport {documentToReactComponents} from \"@contentful/rich-text-react-renderer\";\nimport SoundCloud from \"./soundcloud\";\nimport {ContentfulMusic} from \"../utils/schema\";\n\ninterface CompositionProps {\n    composition: ContentfulMusic;\n}\n\nconst Composition = ({composition}: CompositionProps) => {\n    return (\n        <div className=\"box\">\n            <div className=\"columns is-wrapped\">\n                <div className=\"column\">\n                    <h3 className=\"title is-4\">{composition.title}</h3>\n                    <div className=\"content\">\n                        {documentToReactComponents(composition.description.json)}\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <SoundCloud song={composition.recording} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Composition;\n","import * as React from \"react\";\nimport Section from \"../components/section\";\nimport useCompositions from \"../utils/useCompositions\";\nimport Composition from \"../components/composition\";\n\nconst Compositions = () => {\n    const compositions = useCompositions();\n\n    return (\n        <Section title=\"Composition\">\n            <p className=\"is-tight-desktop\" style={{marginBottom: \"3rem\"}}>\n                I occasionally compose and arrange music. I don&apos;t do it in any\n                professional capacity, but music is meant to be listened to, so here\n                are some of my favorite compositions and arrangements.\n            </p>\n            <div className=\"container\">\n                {compositions.map((composition, i) => (\n                    <Composition composition={composition} key={i} />\n                ))}\n            </div>\n        </Section>\n    );\n};\n\nexport default Compositions;\n","import {graphql, useStaticQuery} from \"gatsby\";\nimport {ContentfulMusic} from \"./schema\";\n\nexport default function useCompositions(): ContentfulMusic[] {\n    const {\n        allContentfulMusic: {nodes: compositions},\n    } = useStaticQuery(graphql`\n        query CompositionQuery {\n            allContentfulMusic(filter: {group: {eq: \"Composition\"}}) {\n                nodes {\n                    title\n                    description {\n                        json\n                    }\n                    recording\n                }\n            }\n        }\n    `);\n\n    return compositions;\n}\n","import * as React from \"react\";\n\ninterface YoutubeProps {\n    video: string;\n}\n\nconst Youtube = ({video}: YoutubeProps) => {\n    return (\n        <iframe\n            width=\"100%\"\n            height=\"100%\"\n            style={{minHeight: \"15rem\", backgroundColor: \"#000\"}}\n            src={video}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen={true}\n        />\n    );\n};\n\nexport default Youtube;\n","import * as React from \"react\";\nimport {ContentfulMusic} from \"../utils/schema\";\nimport {documentToReactComponents} from \"@contentful/rich-text-react-renderer\";\nimport Youtube from \"./youtube\";\n\ninterface PerformanceProps {\n    performance: ContentfulMusic;\n}\n\nconst Performance = ({performance}: PerformanceProps) => {\n    return (\n        <div className=\"column is-half\">\n            <div className=\"card\" style={{height: \"100%\"}}>\n                <div className=\"card-image\">\n                    <div className=\"is-16by9\">\n                        <Youtube video={performance.recording} />\n                    </div>\n                </div>\n                <div className=\"card-content\">\n                    <h3 className=\"title is-4\">{performance.title}</h3>\n                    <p className=\"subtitle is-6\">{performance.group}</p>\n                    <div className=\"content\">\n                        {documentToReactComponents(performance.description.json)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Performance;\n","import React, {useState} from \"react\";\nimport groupBy from \"lodash.groupby\";\n\nimport Section from \"../components/section\";\nimport Performance from \"../components/performance\";\nimport usePerformances from \"../utils/usePerformances\";\nimport Notification from \"../components/notification\";\n\nconst Performances = () => {\n    const {allPerformances: ungroupedPerformances, featuredPerformances} = usePerformances();\n    const allPerformances = groupBy(ungroupedPerformances, \"group\");\n    const [activeGroup, setActiveGroup] = useState(\"all groups\");\n    const [dropDownIsExpanded, setDropDownIsExpanded] = useState(false);\n    const performances = activeGroup === \"all groups\" ? featuredPerformances : allPerformances[activeGroup];\n\n    function handleSetActiveGroup(group: string) {\n        return () => setActiveGroup(group === \"All Groups\" ? \"all groups\" : group);\n    }\n\n    function toggleDropDown() {\n        setDropDownIsExpanded(!dropDownIsExpanded);\n    }\n\n    return (\n        <Section title=\"Performance\">\n            <p className=\"is-tight-desktop\">\n                Music has been a part of my life as long as I can remember, and I&apos;ve been performing in\n                choirs my whole life as well. Here is a collection of every performance I&apos;ve been a part of\n                starting with high school show choir. The only thing not included in this page is middle school show\n                choir.\n            </p>\n            <br />\n            <br />\n            <Notification>\n                You are currently looking at\n                {activeGroup === \"all groups\" ? \" a selection \" : \" all \"}\n                of my performances in&nbsp;\n                <div className={dropDownIsExpanded ? \"dropdown is-active\" : \"dropdown\"} onClick={toggleDropDown}>\n                    <div className=\"dropdown-trigger\">\n                        <button\n                            className=\"button\"\n                            aria-haspopup=\"true\"\n                            aria-controls=\"dropdown-menu\"\n                            style={{\n                                background: \"none\",\n                                border: \"none\",\n                                color: \"white\",\n                                padding: \"0\",\n                                height: \"inherit\",\n                            }}\n                        >\n                            <span style={{borderBottom: \"1px solid white\"}}>{activeGroup}</span>\n                            <span className=\"icon is-small\">\n                                <i className=\"far fa-angle-down\" aria-hidden=\"true\" />\n                            </span>\n                        </button>\n                    </div>\n                    <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                        <div className=\"dropdown-content\">\n                            {[\"All Groups\", ...Object.keys(allPerformances)].map(group => (\n                                <a className=\"dropdown-item\" key={group} onClick={handleSetActiveGroup(group)}>\n                                    {group}\n                                </a>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </Notification>\n            <br />\n            <div className=\"container\">\n                <div className=\"columns is-multiline\">\n                    {performances.map((performance, i) => (\n                        <Performance performance={performance} key={i} />\n                    ))}\n                </div>\n            </div>\n        </Section>\n    );\n};\n\nexport default Performances;\n","import {graphql, useStaticQuery} from \"gatsby\";\nimport orderBy from \"lodash.orderby\";\nimport {ContentfulMusic} from \"./schema\";\n\ninterface Performances {\n    allPerformances: ContentfulMusic[];\n    featuredPerformances: ContentfulMusic[];\n}\n\nexport default function usePerformances(): Performances {\n    const {\n        allContentfulMusic: {nodes: performances},\n        allContentfulFeatured: {nodes: [{sitePerformances: featuredPerformances}]},\n    } = useStaticQuery(graphql`\n        query PerformanceQuery {\n            allContentfulMusic(filter: {group: {nin: \"Composition\"}}) {\n                nodes {\n                    title\n                    group\n                    year\n                    description {\n                        json\n                    }\n                    recording\n                }\n            }\n\n            allContentfulFeatured {\n                nodes {\n                    sitePerformances {\n                        title\n                        group\n                        year\n                        description {\n                            json\n                        }\n                        recording\n                    }\n                }\n            }\n        }\n    `);\n\n    return {\n        featuredPerformances: featuredPerformances,\n        allPerformances: orderBy(performances, \"year\", \"desc\"),\n    };\n}\n","import * as React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Compositions from \"../sections/compositions\";\nimport Performance from \"../sections/performances\";\n\nconst Music = () => (\n    <Layout title=\"Music\">\n        <section className=\"hero is-light\">\n            <div className=\"hero-body\">\n                <Performance />\n            </div>\n        </section>\n        <section className=\"hero is-light\">\n            <div className=\"hero-body\">\n                <Compositions />\n            </div>\n        </section>\n    </Layout>\n);\n\nexport default Music;\n"],"sourceRoot":""}